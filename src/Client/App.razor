@using BlazingChat.Client.Logging

@implements IDisposable

@inject Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader AssemblyLoader
@inject LoggerJob _job

<CascadingAuthenticationState>
    <Error>
        <Router AppAssembly="@typeof(Program).Assembly"
                AdditionalAssemblies="_lazyLoadedAssemblies"
                OnNavigateAsync="OnNavigation">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </Found>
            <NotFound>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound> 
        </Router>  
    </Error>
</CascadingAuthenticationState>

@code {
    private readonly List<System.Reflection.Assembly> _lazyLoadedAssemblies = new();

    protected override Task OnInitializedAsync() =>
        _job.Start();

    private async Task OnNavigation(NavigationContext context)
    {
        if (context.Path == "settings") // Url of the page that needs the lazy loaded assembly
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Radzen.Blazor.dll" });
            _lazyLoadedAssemblies.AddRange(assemblies);
        }
    }

    public void Dispose() =>
        _job.Stop();
}
