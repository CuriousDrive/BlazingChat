@page "/"
@using BlazingChat.ViewModels
@using BlazingChat.Shared
@inject ILoginViewModel _loginViewModel
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorageService
@inject IToastService _toastService
@inject IJSRuntime _jsRuntime

<hr class="white-horizontal-line" />
<div class="col-12">
    <h2 class="white-text">
        <b>Login</b>
    </h2>
    
</div>
<hr class="white-horizontal-line" />
<div class="col-xl-6 col-md-8 col-12">
    <input type="text" @bind="_loginViewModel.EmailAddress" class="form-control dark-theme-textbox" placeholder="email address">
</div>
<br />
<div class="col-xl-6 col-md-8 col-12">
    <input type="password" @bind="_loginViewModel.Password" class="form-control dark-theme-textbox" placeholder="password">
</div>
<div class="col-xl-6 col-md-8 col-12 row">
    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-3 col-3">
        <RadzenSwitch style="margin-bottom: 20px;" @bind-Value="@_loginViewModel.RememberMe" Name="RememberMe" />
    </div>
    <div class="col-xl-5 col-lg-5 col-md-6 col-sm-9 col-9">
        <label style="margin-top: 20px; font-weight: bold; color: #0366d6;" class="white-text">Remember Me</label>
    </div>
</div>
<div class="col-xl-6 col-md-8 col-12 row">
    <div class="col-xl-2 col-lg-2 col-md-6 col-sm-3 col-3">
        <button class="btn btn-danger" @onclick="AuthenticateJWT">Login</button>
    </div>
    <div class="col-xl-5 col-lg-5 col-md-6 col-sm-9 col-9">
        <a style="font-weight: bold;" href="/createaccount">Create an account</a>
    </div>
</div>
<hr class="white-horizontal-line" />
<div class="col-xl-6 col-md-8 col-12">
    <a class="btn btn-block btn-social btn-twitter" @onclick="TwitterJWT" href="">
        <span class="fa fa-twitter"></span> <b>Sign in with Twitter</b>
    </a>
</div>
<br />
<div class="col-xl-6 col-md-8 col-12">
    <a class="btn btn-block btn-social btn-facebook" @onclick="FacebookJWT" href="">
        <span class="fa fa-facebook"></span> <b>Sign in with Facebook</b>
    </a>
</div>
<hr class="white-horizontal-line" />
<div class="col-12">
    <p style="font-size: larger;" class="white-text">
        BlazingChat is a sample Blazor WebAssembly app made for the community
    </p>
</div>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //Initializing the login details for John Smith

        _loginViewModel.EmailAddress = "john.smith@gmail.com";
        _loginViewModel.Password = "john.smith";

        var authState = await authenticationState;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _navigationManager.NavigateTo("/profile");
        }
    }

    public async Task AuthenticateJWT()
    {
        AuthenticationResponse authenticationResponse = await _loginViewModel.AuthenticateJWT();
        if (authenticationResponse.Token != string.Empty)
        {
            await _localStorageService.SetItemAsync("jwt_token", authenticationResponse.Token);
            _navigationManager.NavigateTo("/", true);
        }
        else
        {
            _toastService.ShowError("Invalid username or password");
        }
    }

    public async Task FacebookJWT()
    {
        var appIdAndRedirectUri = (await _loginViewModel.GetFacebookAppIDAndRedirectUriAsync()).Split('&');

        var accessTokenRequest = $"https://www.facebook.com/v11.0/dialog/oauth";
        accessTokenRequest += "?response_type=token";
        accessTokenRequest += $"&client_id={appIdAndRedirectUri[0]}";
        accessTokenRequest += $"&redirect_uri={appIdAndRedirectUri[1]}";

        _navigationManager.NavigateTo(accessTokenRequest, true);
    }

    public async Task TwitterJWT()
    {
        var twitterRequestTokenResponse = await _loginViewModel.GetTwitterOAuthTokenAsync();
        await _localStorageService.SetItemAsync("twitterRequestTokenResponse", twitterRequestTokenResponse);

        _navigationManager.NavigateTo("https://api.twitter.com/oauth/authorize?oauth_token=" + twitterRequestTokenResponse.OAuthToken);
    }

    public async Task GoogleJWT()
    {
        var appIdAndRedirectUri = (await _loginViewModel.GetGoogleClientIDAndRedirectUriAsync()).Split('&');

        var accessTokenRequest = "https://accounts.google.com/o/oauth2/v2/auth?";
        accessTokenRequest += $"scope=https%3A//www.googleapis.com/auth/drive.metadata.readonly&";
        accessTokenRequest += $"access_type=offline&";
        accessTokenRequest += $"include_granted_scopes=true&";
        accessTokenRequest += $"response_type=code&";
        accessTokenRequest += $"state=state_parameter_passthrough_value&";
        accessTokenRequest += $"client_id={appIdAndRedirectUri[0]}&";
        accessTokenRequest += $"redirect_uri={appIdAndRedirectUri[1]}";

        _navigationManager.NavigateTo(accessTokenRequest, true);
    }
}