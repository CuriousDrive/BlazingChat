@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@using System.Security.Claims
@inject ILogger<Error> _logger
@inject IToastService _toastService
@inject IWebAssemblyHostEnvironment _webAssemblyHostEnvironment

<CascadingValue Value=this>
    @ChildContent
</CascadingValue>

@code{

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    public long UserId { get; set; }

    public async Task ProcessError(Exception ex)
    {
        var authState = await authenticationState;//_authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if(user.Identity.IsAuthenticated)
        {
            var claim = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier);
            UserId = Convert.ToInt64(claim?.Value);
        }

        if(!_webAssemblyHostEnvironment.IsDevelopment())
            _toastService.ShowError("Oops, something has gone wrong. Please contact system admin");
        else
            _toastService.ShowError("Oops, something has gone wrong. Please check the logs");

        _logger.LogError(ex, "UserId:{0}", UserId);
    }
}