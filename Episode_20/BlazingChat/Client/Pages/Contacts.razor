@page "/contacts"
@using BlazingChat.ViewModels
@inject IContactsViewModel _contactsViewModel
@inject NavigationManager _navigationManager

<h2><b>Contacts</b></h2>
<hr />

<div class="col-12">
    <div class="col-12 row">
        <input type="text" class="col-9 form-control" placeholder="search"/>
        <span>&nbsp;</span><button class="btn btn-primary">Search</button>
    </div>
    <br />
    @if(ListOfContacts != null)
    {
        @foreach (var contact in ListOfContacts)
        {
            <a href="/chat/@contact.ContactId" 
                class="list-group-item list-group-item-action flex-column align-items-start bold-text">
                @contact.FirstName <span> </span> @contact.LastName
            </a>
        }
        @* <Virtualize Context="contact" ItemsProvider="LoadNextContacts">
            <a href="/chat/@contact.ContactId" 
                class="list-group-item list-group-item-action flex-column align-items-start bold-text">
                @contact.FirstName <span> </span> @contact.LastName
            </a>
        </Virtualize> *@
    }
</div>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    public List<Contact> ListOfContacts { get; set; } = new List<Contact>();

    private async ValueTask<ItemsProviderResult<Contact>> LoadNextContacts(ItemsProviderRequest request)
    {
        int totalUsers = 20000;
        
        Console.WriteLine("Start Index : " + request.StartIndex);
        Console.WriteLine("Count : " + request.Count);
        
        var result = await _contactsViewModel.GetSomeContacts(request.StartIndex, request.Count);

        return new ItemsProviderResult<Contact>(result, totalUsers);
    }


    protected override async Task OnInitializedAsync() 
    {
        var authState = await authenticationState;//_authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if(user.Identity.IsAuthenticated)
        {
            ListOfContacts = await _contactsViewModel.GetAllContacts();
        }
        else _navigationManager.NavigateTo("/");
    }

    
    private void NavigateToChat()
    {
        _navigationManager.NavigateTo("/chat");
    }
}
